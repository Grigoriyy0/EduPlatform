name: edunext

networks:
  backend:
    driver: bridge

volumes:
  rabbitmq_data:
  postgres_data:

services:
  postgres:
    image: postgres:16-alpine
    container_name: edunext-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123123
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /Users/grigoriikokotkin/Desktop/EduPlatform/deploy/initdb:/docker-entrypoint-initdb.d:ro
    networks:
      - backend
  rabbitmq:
    image: rabbitmq:3-management
    container_name: edunext-rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # Management UI (dev only; remove in prod or bind to localhost)
    environment:
      RABBITMQ_DEFAULT_USER: rmuser
      RABBITMQ_DEFAULT_PASS: 123123
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia/
    networks:
      - backend

  api:
    build:
      dockerfile: ./src/EduNEXT.API/Dockerfile
    container_name: edunext-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "8080:8080"
    networks:
      - backend
